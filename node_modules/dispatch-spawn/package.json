{
  "name": "dispatch-spawn",
  "version": "1.0.2",
  "description": "Spawn an existing command via a dispatch server using fleet",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "make test"
  },
  "repository": {
    "type": "git",
    "url": "''"
  },
  "keywords": [
    "fleet",
    "dispatch"
  ],
  "author": {
    "name": "Noah Isaacson"
  },
  "license": "BSD",
  "readmeFilename": "README.md",
  "devDependencies": {
    "eyespect": "~0.1.8",
    "should": "~1.2.2",
    "optimist": "~0.4.0",
    "mocha": "~1.9.0",
    "nconf": "~0.6.7",
    "portfinder": "~0.2.1",
    "request": "~2.21.0"
  },
  "dependencies": {
    "required-keys": "~1.0.5"
  },
  "readme": "# Dispatch Spawn\nExecute fleet-spawn in a given git repo\n\n[![Build Status](https://travis-ci.org/nisaacson/dispatch-spawn.png)](https://travis-ci.org/nisaacson/dispatch-spawn)\n\n\n# Installation\n\n```bash\nnpm install -S dispatch-spawn\n```\n\n# Usage\n\nTo spawn a command, pass all the required parameters to the dispatch-spawn module\n\n```javascript\nvar inspect = require('eyespect').inspector();\nvar dispatchSpawn = require('dispatch-spawn')\nvar repoDir = '/path/to/checked/out/repo'\nvar command = 'node startServer.js'  // command to spawn\nvar host = 'localhost' // fleet hub host\nvar port = 4002 // fleet hub port\nvar secret = 'foo_secret' // fleet hub secret\n\nvar data = {\n  repoDir: repoDir,\n  host: host,\n  port: port,\n  secret: secret,\n  command: command\n}\ndispatchSpawn(data, function (err) {\n  if (err) {\n    console.log(err.stack)\n    delete err.stack\n    inspect(err, 'error spawning command')\n    return\n  }\n  inspect('command spawned correctly')\n})\n```\n\n# Test\n",
  "_id": "dispatch-spawn@1.0.2",
  "_from": "dispatch-spawn@~1.0.1"
}
