{
  "name": "dispatch-should-spawn",
  "version": "1.0.1",
  "description": "test if a command is already spawned the allotted number of times",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "make test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/nisaacson/dispatch-should-spawn.git"
  },
  "keywords": [
    "dispatch"
  ],
  "author": {
    "name": "Noah Isaacson"
  },
  "license": "BSD",
  "readmeFilename": "README.md",
  "gitHead": "e1b391b5ff3347836f27db922e70bee699838244",
  "dependencies": {
    "fleet-get-ps": "~1.0.1"
  },
  "devDependencies": {
    "eyespect": "~0.1.8",
    "should": "~1.2.2",
    "mocha": "~1.9.0",
    "portfinder": "~0.2.1",
    "dispatch-spawn": "~1.0.2"
  },
  "readme": "# Dispatch Should Spawn\nTest if a dispatch fleet command is already spawned the allotted number of instances\n\n# Installation\n\n```bash\nnpm install -S dispatch-should-spawn\n```\n\n# Usage\n\n```javascript\nvar shouldSpawn = require('dispatch-should-spawn')\n// record is a dispatch spawn command fetch from the couchdb database\nvar record = {\n  host: 'localhost',     // fleet hub host\n  port: 7000,            // fleet hub port\n  secret: 'foo_secret',  // fleet hub secret\n  command: 'node startServer.js',\n  instances: 4 // only spawn up to 4 instances of \"node startServer.js\" processes\n  drone: 'fooDrone' // always spawn this command on drone with name \"fooDrone\"\n}\n\nshouldSpawn(record, function (err, reply) {\n  if (err) {\n    inspect(err, 'error checking if dispatch should should spawn command')\n    return\n  }\n  // reply will either be true or false\n  inspect(reply, 'should command be spawned')\n})\n```\n\n# Test\n\n```bash\n# install development dependencies\nnpm install\n# run tests\nnpm test\n```\n",
  "_id": "dispatch-should-spawn@1.0.1",
  "_from": "dispatch-should-spawn@~1.0.1"
}
