{
  "name": "spinup-rebuild",
  "version": "1.0.0",
  "description": "Rebuild binary dependecies when starting your app",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "node_modules/.bin/mocha --reporter spec"
  },
  "repository": "",
  "author": "",
  "license": "BSD",
  "readmeFilename": "README.md",
  "devDependencies": {
    "eyespect": "~0.1.8",
    "should": "~1.2.2",
    "mocha": "~1.8.2",
    "memwatch": "~0.2.2"
  },
  "readme": "# Spinup Rebuild\nRebuild binary dependecies when starting your app\n\n# Installation\n```bash\nnpm install spinup-rebuild\n```\n\n# Usage\nvar should = require('should')\nvar spinupRebuild = require('spinup-rebuild')\nvar inspect = require('eyespect').inspector()\nrebuildAndStart(function(err) {\n  should.not.exist(err, 'error rebuilding and starting application: ' + JSON.stringify(err))\n  inspect('startup complete')\n})\nfunction rebuildAndStart(cb) {\nspinupRebuild(function(err) {\n  if (err) { return cb(err) }\n  console.log('rebuild complete')\n  // now start the rest of your application which depends on binary modules\n\n  // for example memwatch will only work if it has been compiled for your target platform\n  var memwatch = require('memwatch')\n  start(cb)\n})\n\n/**\n * Trivial startup function which just takes a heap dump and returns\n * This is just meant to illustrate using a binary module which must be compiled before your app can fun\n */\nfunction start(cb) {\n  var hd = new memwatch.HeapDiff();\n  var diff = hd.end();\n  inspect(diff, 'heap diff')\n  cb()\n}\n",
  "_id": "spinup-rebuild@1.0.0",
  "dist": {
    "shasum": "2f1648bbe77b5e2f1836c4cf321aa7ae301f34b5"
  },
  "_from": "spinup-rebuild@",
  "_resolved": "https://registry.npmjs.org/spinup-rebuild/-/spinup-rebuild-1.0.0.tgz"
}
